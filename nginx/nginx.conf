events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript;

    # Upstream servers
    upstream grc_frontend {
        server frontend:80;
    }

    upstream grc_backend {
        server backend:8000;
    }

    upstream mobsf_backend {
        server mobsf:8000;
    }

    upstream redis_backend {
        server compliance_redis:6379;
    }

    upstream postgres_backend {
        server compliance_postgres:5432;
    }

    # Main server block
    server {
        listen       80;
        server_name  localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # ===========================================
        # GRC APPLICATION ROUTES
        # ===========================================

        # Main GRC Frontend (React App) - Default route
        location / {
            proxy_pass http://grc_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # GRC Backend API endpoints
        location /api/ {
            proxy_pass http://grc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Django Admin interface
        location /admin/ {
            proxy_pass http://grc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Django Media files
        location /media/ {
            proxy_pass http://grc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Cache media files
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Django Static files
        location /static/ {
            proxy_pass http://grc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Cache static files
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # ===========================================
        # MOBSF (MOBILE SECURITY FRAMEWORK) ROUTES
        # ===========================================

        # MobSF Web Interface
        location /mobsf/ {
            proxy_pass http://mobsf_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for MobSF
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # File upload support
            client_max_body_size 500M;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # MobSF API endpoints
        location /api/mobsf/ {
            proxy_pass http://mobsf_backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API specific headers
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
            
            # File upload support for API
            client_max_body_size 500M;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # ===========================================
        # UTILITY ENDPOINTS
        # ===========================================

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "All services healthy\n";
            add_header Content-Type text/plain;
        }

        # Service status endpoint
        location /status {
            access_log off;
            return 200 '{"grc_frontend": "running", "grc_backend": "running", "mobsf": "running", "redis": "running", "postgres": "running"}';
            add_header Content-Type application/json;
        }

        # API documentation endpoint
        location /docs/ {
            proxy_pass http://grc_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # ===========================================
        # ERROR PAGES
        # ===========================================

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # Custom error page for 404
        error_page 404 /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
        }
    }
}

